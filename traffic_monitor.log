2025-07-03 08:35:56,810 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 08:35:56,946 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-03 08:35:56,976 - __main__ - INFO - Starting traffic monitoring with KPIs on source: 4.mp4
2025-07-03 08:36:00,308 - __main__ - INFO - Vehicle 7 (motorcycle) crossed line at 2025-07-03 08:36:00.308472
2025-07-03 08:36:11,890 - __main__ - INFO - Vehicle 28 (car) crossed line at 2025-07-03 08:36:11.890443
2025-07-03 08:36:11,993 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 08:36:15,158 - __main__ - INFO - Vehicle 18 (car) crossed line at 2025-07-03 08:36:15.158190
2025-07-03 08:36:18,111 - __main__ - INFO - Vehicle 6 (bus) crossed line at 2025-07-03 08:36:18.110867
2025-07-03 08:36:19,495 - __main__ - INFO - Vehicle 50 (car) crossed line at 2025-07-03 08:36:19.495038
2025-07-03 08:36:20,774 - __main__ - INFO - Vehicle 58 (car) crossed line at 2025-07-03 08:36:20.774774
2025-07-03 08:36:23,756 - __main__ - INFO - Vehicle 51 (car) crossed line at 2025-07-03 08:36:23.756559
2025-07-03 08:36:26,126 - __main__ - INFO - Vehicle 60 (car) crossed line at 2025-07-03 08:36:26.126452
2025-07-03 08:36:26,520 - __main__ - INFO - Vehicle 74 (car) crossed line at 2025-07-03 08:36:26.520496
2025-07-03 08:36:27,011 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-03 08:36:27,012 - __main__ - INFO - KPI Update - Flow: 18.0 km/h, Congestion: 12.0%, Satisfaction: 70.8
2025-07-03 08:36:30,203 - __main__ - INFO - Vehicle 63 (car) crossed line at 2025-07-03 08:36:30.203647
2025-07-03 08:36:31,430 - __main__ - INFO - Vehicle 82 (car) crossed line at 2025-07-03 08:36:31.430041
2025-07-03 08:36:33,815 - __main__ - INFO - Vehicle 85 (car) crossed line at 2025-07-03 08:36:33.815190
2025-07-03 08:36:36,076 - __main__ - INFO - Vehicle 91 (car) crossed line at 2025-07-03 08:36:36.076814
2025-07-03 08:36:39,634 - __main__ - INFO - Vehicle 92 (car) crossed line at 2025-07-03 08:36:39.634413
2025-07-03 08:36:40,911 - __main__ - INFO - Vehicle 95 (car) crossed line at 2025-07-03 08:36:40.911228
2025-07-03 08:36:42,098 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 6
2025-07-03 08:36:45,025 - __main__ - INFO - Vehicle 89 (car) crossed line at 2025-07-03 08:36:45.024835
2025-07-03 08:36:45,473 - __main__ - INFO - Vehicle 108 (car) crossed line at 2025-07-03 08:36:45.473105
2025-07-03 08:36:46,465 - __main__ - INFO - Vehicle 99 (truck) crossed line at 2025-07-03 08:36:46.465517
2025-07-03 08:36:47,959 - __main__ - INFO - Vehicle 79 (bus) crossed line at 2025-07-03 08:36:47.959373
2025-07-03 08:36:49,851 - __main__ - INFO - Vehicle 103 (car) crossed line at 2025-07-03 08:36:49.851784
2025-07-03 08:36:52,312 - __main__ - INFO - Vehicle 107 (car) crossed line at 2025-07-03 08:36:52.312008
2025-07-03 08:36:55,455 - __main__ - INFO - Vehicle 118 (truck) crossed line at 2025-07-03 08:36:55.455467
2025-07-03 08:36:56,239 - __main__ - INFO - Vehicle 120 (car) crossed line at 2025-07-03 08:36:56.239740
2025-07-03 08:36:56,828 - __main__ - INFO - Vehicle 123 (car) crossed line at 2025-07-03 08:36:56.828340
2025-07-03 08:36:57,022 - __main__ - INFO - KPI Update - Flow: 9.5 km/h, Congestion: 14.0%, Satisfaction: 63.4
2025-07-03 08:36:57,123 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 9
2025-07-03 08:36:59,734 - __main__ - INFO - Vehicle 117 (car) crossed line at 2025-07-03 08:36:59.733883
2025-07-03 08:37:03,415 - __main__ - INFO - Vehicle 125 (car) crossed line at 2025-07-03 08:37:03.415316
2025-07-03 08:37:07,262 - __main__ - INFO - Vehicle 138 (car) crossed line at 2025-07-03 08:37:07.262303
2025-07-03 08:37:09,643 - __main__ - INFO - Vehicle 135 (truck) crossed line at 2025-07-03 08:37:09.643380
2025-07-03 08:37:11,320 - __main__ - INFO - Vehicle 127 (car) crossed line at 2025-07-03 08:37:11.319918
2025-07-03 08:37:12,208 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 5
2025-07-03 08:37:14,658 - __main__ - INFO - Vehicle 139 (car) crossed line at 2025-07-03 08:37:14.658669
2025-07-03 08:37:16,626 - __main__ - INFO - Vehicle 158 (car) crossed line at 2025-07-03 08:37:16.626749
2025-07-03 08:37:19,746 - __main__ - INFO - Vehicle 145 (car) crossed line at 2025-07-03 08:37:19.745923
2025-07-03 08:37:19,861 - __main__ - INFO - Vehicle 150 (car) crossed line at 2025-07-03 08:37:19.861667
2025-07-03 08:37:23,926 - __main__ - INFO - Vehicle 164 (car) crossed line at 2025-07-03 08:37:23.926689
2025-07-03 08:37:25,011 - __main__ - INFO - Vehicle 162 (car) crossed line at 2025-07-03 08:37:25.011291
2025-07-03 08:37:27,115 - __main__ - INFO - KPI Update - Flow: 8.9 km/h, Congestion: 10.0%, Satisfaction: 64.1
2025-07-03 08:37:27,215 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 6
2025-07-03 08:37:27,627 - __main__ - INFO - Vehicle 151 (car) crossed line at 2025-07-03 08:37:27.627370
2025-07-03 08:37:29,498 - __main__ - INFO - Vehicle 166 (car) crossed line at 2025-07-03 08:37:29.498568
2025-07-03 08:37:32,163 - __main__ - INFO - Vehicle 173 (car) crossed line at 2025-07-03 08:37:32.163649
2025-07-03 08:37:36,395 - __main__ - INFO - Vehicle 176 (car) crossed line at 2025-07-03 08:37:36.395330
2025-07-03 08:37:37,371 - __main__ - INFO - Vehicle 172 (car) crossed line at 2025-07-03 08:37:37.371136
2025-07-03 08:37:37,566 - __main__ - INFO - Vehicle 182 (truck) crossed line at 2025-07-03 08:37:37.566275
2025-07-03 08:37:40,885 - __main__ - INFO - Vehicle 178 (car) crossed line at 2025-07-03 08:37:40.885277
2025-07-03 08:37:41,470 - __main__ - INFO - Vehicle 187 (car) crossed line at 2025-07-03 08:37:41.469840
2025-07-03 08:37:42,264 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 8
2025-07-03 08:37:43,379 - __main__ - INFO - Vehicle 185 (car) crossed line at 2025-07-03 08:37:43.379523
2025-07-03 08:37:45,082 - __main__ - INFO - Vehicle 188 (car) crossed line at 2025-07-03 08:37:45.082204
2025-07-03 08:37:57,155 - __main__ - INFO - KPI Update - Flow: 9.6 km/h, Congestion: 18.0%, Satisfaction: 62.3
2025-07-03 08:37:57,289 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 08:37:58,591 - __main__ - INFO - Vehicle 206 (truck) crossed line at 2025-07-03 08:37:58.591483
2025-07-03 08:37:58,903 - __main__ - INFO - Vehicle 210 (car) crossed line at 2025-07-03 08:37:58.903087
2025-07-03 08:38:03,527 - __main__ - INFO - Vehicle 215 (car) crossed line at 2025-07-03 08:38:03.527630
2025-07-03 08:38:07,859 - __main__ - INFO - Vehicle 226 (car) crossed line at 2025-07-03 08:38:07.858992
2025-07-03 08:38:12,356 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 4
2025-07-03 08:38:14,348 - __main__ - INFO - Vehicle 217 (car) crossed line at 2025-07-03 08:38:14.347994
2025-07-03 08:38:27,242 - __main__ - INFO - KPI Update - Flow: 7.2 km/h, Congestion: 10.0%, Satisfaction: 62.8
2025-07-03 08:38:27,444 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 1
2025-07-03 08:38:39,047 - __main__ - INFO - Vehicle 245 (car) crossed line at 2025-07-03 08:38:39.047440
2025-07-03 08:38:42,545 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 1
2025-07-03 08:38:44,379 - __main__ - WARNING - Failed to read frame
2025-07-03 08:38:44,379 - __main__ - INFO - Cleanup completed
2025-07-03 08:43:16,657 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 08:43:16,787 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-03 08:43:16,872 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-03 08:43:37,029 - __main__ - INFO - Vehicle 43 (car) crossed line at 2025-07-03 08:43:37.029066
2025-07-03 08:43:37,843 - __main__ - INFO - Vehicle 17 (bus) crossed line at 2025-07-03 08:43:37.843179
2025-07-03 08:43:38,669 - __main__ - WARNING - Failed to read frame
2025-07-03 08:43:38,669 - __main__ - INFO - Cleanup completed
2025-07-03 21:52:12,816 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:54:01,076 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:54:12,380 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:55:09,742 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:55:42,935 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:55:43,491 - __main__ - INFO - Industrial Traffic Monitor with enhanced detection initialized
2025-07-03 21:55:43,505 - __main__ - ERROR - Failed to open video source: D:/thunder_coding/python/smart_traffic/Untitled video - Made with Clipchamp.mp4
2025-07-03 21:56:29,453 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:56:29,972 - __main__ - INFO - Industrial Traffic Monitor with enhanced detection initialized
2025-07-03 21:56:29,984 - __main__ - ERROR - Failed to open video source: D:/thunder_coding/python/smart_traffic/Untitled video - Made with Clipchamp.mp4
2025-07-03 21:57:36,893 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 21:57:37,549 - __main__ - INFO - Industrial Traffic Monitor with enhanced detection initialized
2025-07-03 21:57:37,578 - __main__ - INFO - Starting traffic monitoring with enhanced detection on source: 4.mp4
2025-07-03 21:57:52,246 - __main__ - INFO - Vehicle 13 (car) crossed line at 2025-07-03 21:57:52.246334
2025-07-03 21:57:52,591 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 1
2025-07-03 21:58:07,714 - __main__ - INFO - KPI Update - Flow: 5.5 km/h, Congestion: 18.0%, Satisfaction: 59.0
2025-07-03 21:58:23,199 - __main__ - INFO - Vehicle 4 (car) crossed line at 2025-07-03 21:58:23.199506
2025-07-03 21:58:34,352 - __main__ - INFO - Vehicle 8 (car) crossed line at 2025-07-03 21:58:34.352319
2025-07-03 21:58:37,734 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 12.0%, Satisfaction: 60.4
2025-07-03 21:58:38,078 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 21:58:42,666 - __main__ - INFO - Vehicle 20 (car) crossed line at 2025-07-03 21:58:42.666870
2025-07-03 21:58:45,161 - __main__ - INFO - Vehicle 5 (bus) crossed line at 2025-07-03 21:58:45.160888
2025-07-03 21:58:50,168 - __main__ - INFO - Vehicle 26 (car) crossed line at 2025-07-03 21:58:50.168806
2025-07-03 21:58:53,401 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-03 21:58:54,801 - __main__ - INFO - Vehicle 30 (car) crossed line at 2025-07-03 21:58:54.800933
2025-07-03 21:59:05,954 - __main__ - INFO - Vehicle 31 (car) crossed line at 2025-07-03 21:59:05.953961
2025-07-03 21:59:07,739 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 18.0%, Satisfaction: 58.6
2025-07-03 21:59:08,521 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 21:59:13,784 - __main__ - INFO - Vehicle 32 (car) crossed line at 2025-07-03 21:59:13.784119
2025-07-03 21:59:18,299 - __main__ - INFO - Vehicle 35 (truck) crossed line at 2025-07-03 21:59:18.299367
2025-07-03 21:59:23,856 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 21:59:26,981 - __main__ - INFO - Vehicle 39 (car) crossed line at 2025-07-03 21:59:26.981346
2025-07-03 21:59:32,114 - __main__ - INFO - Vehicle 43 (car) crossed line at 2025-07-03 21:59:32.114763
2025-07-03 21:59:37,971 - __main__ - INFO - KPI Update - Flow: 5.2 km/h, Congestion: 16.0%, Satisfaction: 59.4
2025-07-03 21:59:39,105 - __main__ - INFO - Vehicle 42 (car) crossed line at 2025-07-03 21:59:39.105786
2025-07-03 21:59:39,110 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-03 21:59:48,361 - __main__ - INFO - Vehicle 44 (car) crossed line at 2025-07-03 21:59:48.361716
2025-07-03 21:59:48,699 - __main__ - INFO - Vehicle 47 (car) crossed line at 2025-07-03 21:59:48.699333
2025-07-03 21:59:54,116 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:00:00,954 - __main__ - INFO - Vehicle 49 (car) crossed line at 2025-07-03 22:00:00.954107
2025-07-03 22:00:05,362 - __main__ - INFO - Vehicle 50 (car) crossed line at 2025-07-03 22:00:05.362813
2025-07-03 22:00:08,182 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 20.0%, Satisfaction: 58.0
2025-07-03 22:00:09,199 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:00:19,111 - __main__ - INFO - Vehicle 52 (car) crossed line at 2025-07-03 22:00:19.111564
2025-07-03 22:00:20,489 - __main__ - INFO - Vehicle 60 (car) crossed line at 2025-07-03 22:00:20.489052
2025-07-03 22:00:23,893 - __main__ - INFO - Vehicle 53 (truck) crossed line at 2025-07-03 22:00:23.893564
2025-07-03 22:00:24,233 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-03 22:00:28,989 - __main__ - INFO - Vehicle 36 (bus) crossed line at 2025-07-03 22:00:28.989386
2025-07-03 22:00:34,979 - __main__ - INFO - Vehicle 54 (car) crossed line at 2025-07-03 22:00:34.978911
2025-07-03 22:00:38,312 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 12.0%, Satisfaction: 60.4
2025-07-03 22:00:39,327 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:00:43,712 - __main__ - INFO - Vehicle 63 (car) crossed line at 2025-07-03 22:00:43.712873
2025-07-03 22:00:54,378 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 1
2025-07-03 22:00:57,529 - __main__ - INFO - Vehicle 72 (car) crossed line at 2025-07-03 22:00:57.529520
2025-07-03 22:00:59,220 - __main__ - INFO - Vehicle 68 (car) crossed line at 2025-07-03 22:00:59.220276
2025-07-03 22:01:08,429 - __main__ - INFO - KPI Update - Flow: 5.6 km/h, Congestion: 18.0%, Satisfaction: 59.1
2025-07-03 22:01:09,437 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:01:10,116 - __main__ - INFO - Vehicle 73 (car) crossed line at 2025-07-03 22:01:10.116149
2025-07-03 22:01:23,127 - __main__ - INFO - Vehicle 78 (car) crossed line at 2025-07-03 22:01:23.127163
2025-07-03 22:01:24,479 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:01:35,927 - __main__ - INFO - Vehicle 85 (car) crossed line at 2025-07-03 22:01:35.926916
2025-07-03 22:01:38,745 - __main__ - INFO - KPI Update - Flow: 5.1 km/h, Congestion: 18.0%, Satisfaction: 58.7
2025-07-03 22:01:39,554 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 1
2025-07-03 22:01:46,340 - __main__ - INFO - Vehicle 91 (truck) crossed line at 2025-07-03 22:01:46.340493
2025-07-03 22:01:50,063 - __main__ - INFO - Vehicle 92 (car) crossed line at 2025-07-03 22:01:50.063315
2025-07-03 22:01:54,825 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:02:01,582 - __main__ - INFO - Vehicle 95 (car) crossed line at 2025-07-03 22:02:01.581892
2025-07-03 22:02:08,125 - __main__ - INFO - Vehicle 97 (car) crossed line at 2025-07-03 22:02:08.125670
2025-07-03 22:02:08,803 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 18.0%, Satisfaction: 58.6
2025-07-03 22:02:10,148 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:02:19,208 - __main__ - INFO - Vehicle 104 (car) crossed line at 2025-07-03 22:02:19.208860
2025-07-03 22:02:19,211 - __main__ - INFO - Vehicle 108 (car) crossed line at 2025-07-03 22:02:19.208860
2025-07-03 22:02:25,510 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:02:33,408 - __main__ - INFO - Vehicle 116 (car) crossed line at 2025-07-03 22:02:33.408264
2025-07-03 22:02:37,852 - __main__ - INFO - Vehicle 114 (car) crossed line at 2025-07-03 22:02:37.852169
2025-07-03 22:02:38,868 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 12.0%, Satisfaction: 60.4
2025-07-03 22:02:40,630 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:02:44,039 - __main__ - INFO - Vehicle 106 (car) crossed line at 2025-07-03 22:02:44.039211
2025-07-03 22:02:51,985 - __main__ - INFO - Vehicle 119 (car) crossed line at 2025-07-03 22:02:51.985110
2025-07-03 22:02:55,705 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:03:01,307 - __main__ - INFO - Vehicle 120 (car) crossed line at 2025-07-03 22:03:01.307122
2025-07-03 22:03:05,085 - __main__ - INFO - Vehicle 126 (car) crossed line at 2025-07-03 22:03:05.085024
2025-07-03 22:03:09,003 - __main__ - INFO - KPI Update - Flow: 5.2 km/h, Congestion: 18.0%, Satisfaction: 58.7
2025-07-03 22:03:11,026 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-03 22:03:16,445 - __main__ - INFO - Vehicle 131 (car) crossed line at 2025-07-03 22:03:16.445350
2025-07-03 22:03:19,864 - __main__ - INFO - Vehicle 121 (car) crossed line at 2025-07-03 22:03:19.863971
2025-07-03 22:03:20,937 - __main__ - INFO - Vehicle 128 (truck) crossed line at 2025-07-03 22:03:20.937458
2025-07-03 22:03:26,301 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-03 22:03:52,220 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-03 22:03:52,776 - __main__ - INFO - Industrial Traffic Monitor with enhanced detection initialized
2025-07-03 22:03:52,845 - __main__ - INFO - Starting traffic monitoring with enhanced detection on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-03 22:04:23,005 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 16.0%, Satisfaction: 59.2
2025-07-03 22:04:53,318 - __main__ - INFO - KPI Update - Flow: 5.0 km/h, Congestion: 18.0%, Satisfaction: 58.6
2025-07-03 22:04:54,036 - __main__ - INFO - Vehicle 5 (bus) crossed line at 2025-07-03 22:04:54.036517
2025-07-03 22:04:56,673 - __main__ - WARNING - Failed to read frame
2025-07-03 22:04:56,673 - __main__ - INFO - Cleanup completed
2025-07-04 08:12:26,921 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:12:27,055 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:12:34,230 - __main__ - INFO - Starting traffic monitoring with KPIs on source: 4.mp4
2025-07-04 08:12:57,071 - __main__ - INFO - KPI Update - Flow: 11.4 km/h, Congestion: 14.0%, Satisfaction: 64.9
2025-07-04 08:12:57,175 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 5
2025-07-04 08:13:12,261 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-04 08:13:27,083 - __main__ - INFO - KPI Update - Flow: 10.0 km/h, Congestion: 14.0%, Satisfaction: 63.8
2025-07-04 08:13:27,285 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-04 08:13:42,380 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 6
2025-07-04 08:13:57,170 - __main__ - INFO - KPI Update - Flow: 10.6 km/h, Congestion: 12.0%, Satisfaction: 64.9
2025-07-04 08:13:57,381 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-04 08:14:01,339 - __main__ - INFO - Monitoring stopped by user
2025-07-04 08:14:01,340 - __main__ - INFO - Cleanup completed
2025-07-04 08:15:31,196 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:15:31,329 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:17:02,442 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-04 08:17:03,955 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 12.0%, Satisfaction: 56.4
2025-07-04 08:17:08,228 - __main__ - INFO - Monitoring stopped by user
2025-07-04 08:17:08,228 - __main__ - INFO - Cleanup completed
2025-07-04 08:17:13,312 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:17:13,437 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:17:23,572 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-04 08:17:43,470 - __main__ - INFO - KPI Update - Flow: 4.3 km/h, Congestion: 20.0%, Satisfaction: 56.6
2025-07-04 08:17:45,935 - __main__ - WARNING - Failed to read frame
2025-07-04 08:17:45,935 - __main__ - INFO - Cleanup completed
2025-07-04 08:18:08,468 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:18:08,601 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:18:14,990 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-04 08:18:36,838 - __main__ - WARNING - Failed to read frame
2025-07-04 08:18:36,838 - __main__ - INFO - Cleanup completed
2025-07-04 08:19:16,729 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:19:16,864 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:19:22,861 - __main__ - INFO - Starting traffic monitoring with KPIs on source: 4.mp4
2025-07-04 08:19:31,887 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 4
2025-07-04 08:19:46,877 - __main__ - INFO - KPI Update - Flow: 11.5 km/h, Congestion: 18.0%, Satisfaction: 63.8
2025-07-04 08:19:46,881 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 5
2025-07-04 08:20:01,938 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-04 08:20:16,922 - __main__ - INFO - KPI Update - Flow: 11.4 km/h, Congestion: 12.0%, Satisfaction: 65.5
2025-07-04 08:20:17,038 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 7
2025-07-04 08:20:32,089 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 8
2025-07-04 08:20:47,000 - __main__ - INFO - KPI Update - Flow: 8.9 km/h, Congestion: 10.0%, Satisfaction: 64.1
2025-07-04 08:20:47,125 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 5
2025-07-04 08:21:02,228 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 8
2025-07-04 08:21:17,084 - __main__ - INFO - KPI Update - Flow: 10.0 km/h, Congestion: 18.0%, Satisfaction: 62.6
2025-07-04 08:21:17,296 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 8
2025-07-04 08:21:32,364 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-04 08:21:47,103 - __main__ - INFO - KPI Update - Flow: 8.1 km/h, Congestion: 14.0%, Satisfaction: 62.3
2025-07-04 08:21:47,415 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-04 08:22:11,932 - __main__ - WARNING - Failed to read frame
2025-07-04 08:22:11,933 - __main__ - INFO - Cleanup completed
2025-07-04 08:23:26,723 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:23:26,890 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:23:40,049 - __main__ - INFO - Starting traffic monitoring with KPIs on source: DJI_20240223171559_0472_D.MP4
2025-07-04 08:23:56,923 - __main__ - INFO - KPI Update - Flow: 7.7 km/h, Congestion: 30.0%, Satisfaction: 57.1
2025-07-04 08:24:24,081 - __main__ - INFO - Monitoring stopped by user
2025-07-04 08:24:24,081 - __main__ - INFO - Cleanup completed
2025-07-04 08:24:29,924 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:24:30,032 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:24:34,354 - __main__ - INFO - Starting traffic monitoring with KPIs on source: DJI_20240223171559_0472_D.MP4
2025-07-04 08:25:00,132 - __main__ - INFO - KPI Update - Flow: 5.4 km/h, Congestion: 14.0%, Satisfaction: 60.1
2025-07-04 08:25:30,191 - __main__ - INFO - KPI Update - Flow: 4.3 km/h, Congestion: 10.0%, Satisfaction: 60.5
2025-07-04 08:26:00,298 - __main__ - INFO - KPI Update - Flow: 4.3 km/h, Congestion: 14.0%, Satisfaction: 59.2
2025-07-04 08:26:30,371 - __main__ - INFO - KPI Update - Flow: 3.7 km/h, Congestion: 22.0%, Satisfaction: 56.3
2025-07-04 08:26:42,603 - __main__ - INFO - Monitoring stopped by user
2025-07-04 08:26:42,604 - __main__ - INFO - Cleanup completed
2025-07-04 08:26:49,833 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-04 08:26:49,946 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-04 08:26:56,223 - __main__ - INFO - Starting traffic monitoring with KPIs on source: DJI_20240223171559_0472_D.MP4
2025-07-04 08:27:05,045 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-04 08:27:20,036 - __main__ - INFO - KPI Update - Flow: 14.4 km/h, Congestion: 12.0%, Satisfaction: 67.9
2025-07-04 08:27:20,145 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 3
2025-07-04 08:27:35,231 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-04 08:27:50,084 - __main__ - INFO - KPI Update - Flow: 11.9 km/h, Congestion: 14.0%, Satisfaction: 65.3
2025-07-04 08:27:50,314 - __main__ - INFO - Saved traffic data: Low Traffic, Vehicles: 2
2025-07-04 08:27:50,393 - __main__ - INFO - Monitoring stopped by user
2025-07-04 08:27:50,393 - __main__ - INFO - Cleanup completed
2025-07-13 12:08:46,101 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 12:08:46,269 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 12:08:52,120 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 12:09:01,340 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 1
2025-07-13 12:09:16,337 - __main__ - INFO - KPI Update - Flow: 7.3 km/h, Congestion: 24.0%, Satisfaction: 58.7
2025-07-13 12:09:16,341 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 3
2025-07-13 12:09:26,690 - __main__ - WARNING - Failed to read frame
2025-07-13 12:09:26,691 - __main__ - INFO - Cleanup completed
2025-07-13 20:06:08,043 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:06:08,185 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:06:14,683 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:06:23,286 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 1
2025-07-13 20:06:38,227 - __main__ - INFO - KPI Update - Flow: 7.3 km/h, Congestion: 24.0%, Satisfaction: 58.7
2025-07-13 20:06:38,369 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:06:48,654 - __main__ - WARNING - Failed to read frame
2025-07-13 20:06:48,655 - __main__ - INFO - Cleanup completed
2025-07-13 20:07:08,007 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:07:08,117 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:07:10,962 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:07:23,129 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 3
2025-07-13 20:07:38,233 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:07:38,233 - __main__ - INFO - KPI Update - Flow: 5.7 km/h, Congestion: 22.0%, Satisfaction: 57.9
2025-07-13 20:07:45,165 - __main__ - WARNING - Failed to read frame
2025-07-13 20:07:45,165 - __main__ - INFO - Cleanup completed
2025-07-13 20:08:43,554 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:08:43,673 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:08:56,026 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:09:13,741 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:09:13,741 - __main__ - INFO - KPI Update - Flow: 6.3 km/h, Congestion: 28.0%, Satisfaction: 55.3
2025-07-13 20:09:28,846 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 3
2025-07-13 20:09:29,888 - __main__ - WARNING - Failed to read frame
2025-07-13 20:09:29,888 - __main__ - INFO - Cleanup completed
2025-07-13 20:17:31,671 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:17:31,799 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:17:34,957 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:17:46,834 - __main__ - ERROR - ❌ Failed to save data: name 'TrafficFlowPredictor' is not defined
2025-07-13 20:18:01,820 - __main__ - INFO - KPI Update - Flow: 6.3 km/h, Congestion: 24.0%, Satisfaction: 57.8
2025-07-13 20:18:01,964 - __main__ - ERROR - ❌ Failed to save data: name 'TrafficFlowPredictor' is not defined
2025-07-13 20:18:09,720 - __main__ - WARNING - Failed to read frame
2025-07-13 20:18:09,721 - __main__ - INFO - Cleanup completed
2025-07-13 20:23:24,683 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:23:24,836 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:23:27,227 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:23:28,265 - __main__ - ERROR - Runtime error: This GradientBoostingRegressor instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.
2025-07-13 20:23:28,265 - __main__ - INFO - Cleanup completed
2025-07-13 20:29:07,187 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:29:07,335 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:29:09,835 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:29:10,904 - __main__ - ERROR - Runtime error: local variable 'display_frame' referenced before assignment
2025-07-13 20:29:10,904 - __main__ - INFO - Cleanup completed
2025-07-13 20:31:28,385 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:31:28,526 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:31:30,769 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:31:31,957 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,112 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,259 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,431 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,595 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,742 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:32,891 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,036 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,185 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,344 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,494 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,641 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,788 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:33,930 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,070 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,210 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,350 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,495 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,634 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,775 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:34,916 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,058 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,198 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,338 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,478 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,618 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,760 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:35,900 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,043 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,182 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,322 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,463 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,604 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,745 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:36,885 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,024 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,165 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,306 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,447 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,588 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,732 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:37,874 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,015 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,157 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,298 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,438 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,581 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,855 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:38,992 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,269 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,405 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,543 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,688 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,830 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:39,969 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,111 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,254 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,394 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,534 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,674 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,831 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:40,983 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,130 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,286 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,465 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,610 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,755 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:41,902 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,053 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,208 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,355 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,505 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,655 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,806 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:42,956 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,103 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,254 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,400 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,546 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,554 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:31:43,703 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:43,851 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,006 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,156 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,312 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,474 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,619 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,769 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:44,918 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,064 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,213 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,360 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,510 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,658 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,817 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:45,968 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,264 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,406 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,549 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,691 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,833 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:46,976 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,114 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,253 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,395 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,534 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,675 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,816 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:47,958 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,098 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,238 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,378 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,519 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,660 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,802 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:48,942 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,084 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,225 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,364 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,506 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,648 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,790 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:49,947 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,103 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,253 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,401 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,571 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,724 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:50,872 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,020 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,170 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,317 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,468 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,615 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,763 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:51,913 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,060 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,209 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,355 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,502 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,649 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,797 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:52,949 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,096 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,244 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,389 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,538 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,685 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,831 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:53,979 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,127 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,275 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,424 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,581 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,733 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:54,881 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,029 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,177 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,327 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,510 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,746 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:55,930 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,091 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,248 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,406 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,563 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,722 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:56,881 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,031 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,178 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,323 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,473 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,664 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:57,815 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,110 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,278 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,433 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,580 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,584 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:31:58,584 - __main__ - INFO - KPI Update - Flow: 6.4 km/h, Congestion: 20.0%, Satisfaction: 59.1
2025-07-13 20:31:58,738 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:58,880 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,174 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,320 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,465 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,604 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,743 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:31:59,885 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,026 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,167 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,307 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,447 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,589 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,730 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:00,870 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,012 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,153 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,294 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,434 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,574 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,715 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,855 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:01,996 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,139 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,280 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,421 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,561 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,703 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,843 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:02,985 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,123 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,260 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,415 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,563 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,714 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:03,874 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,022 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,167 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,315 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,463 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,606 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,748 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:04,892 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:05,057 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:05,339 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:05,485 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:05,631 - __main__ - WARNING - Prediction failed: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-07-13 20:32:05,809 - __main__ - WARNING - Failed to read frame
2025-07-13 20:32:05,809 - __main__ - INFO - Cleanup completed
2025-07-13 20:34:58,722 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-13 20:34:58,867 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-13 20:35:01,087 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-13 20:35:13,995 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:35:28,968 - __main__ - INFO - KPI Update - Flow: 12.4 km/h, Congestion: 24.0%, Satisfaction: 62.7
2025-07-13 20:35:29,118 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-13 20:35:36,221 - __main__ - WARNING - Failed to read frame
2025-07-13 20:35:36,221 - __main__ - INFO - Cleanup completed
2025-07-14 08:17:21,101 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:17:21,251 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:17:26,125 - __main__ - INFO - Starting traffic monitoring with KPIs on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 08:17:36,285 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 1
2025-07-14 08:17:51,273 - __main__ - INFO - KPI Update - Flow: 10.4 km/h, Congestion: 28.0%, Satisfaction: 60.0
2025-07-14 08:17:51,424 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-14 08:18:01,341 - __main__ - WARNING - Failed to read frame
2025-07-14 08:18:01,342 - __main__ - INFO - Cleanup completed
2025-07-14 08:32:52,412 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:32:52,571 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:33:32,262 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:33:32,401 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:33:46,231 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 08:33:47,455 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 6
2025-07-14 08:34:02,434 - __main__ - INFO - KPI Update - Flow: 12.6 km/h, Congestion: 28.0%, Satisfaction: 60.2
2025-07-14 08:34:02,584 - __main__ - INFO - ✅ Saved traffic + KPI data: Severe Congestion, Vehicles: 252
2025-07-14 08:34:17,650 - __main__ - INFO - ✅ Saved traffic + KPI data: Severe Congestion, Vehicles: 304
2025-07-14 08:34:21,063 - __main__ - WARNING - Failed to read frame
2025-07-14 08:34:21,063 - __main__ - INFO - Cleanup completed
2025-07-14 08:35:17,065 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:35:17,210 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:35:26,197 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 08:35:32,287 - __main__ - INFO - ✅ Saved traffic + KPI data: Severe Congestion, Vehicles: 115
2025-07-14 08:35:47,303 - __main__ - INFO - ✅ Saved traffic + KPI data: Severe Congestion, Vehicles: 391
2025-07-14 08:35:47,303 - __main__ - INFO - KPI Update - Flow: 11.5 km/h, Congestion: 30.0%, Satisfaction: 60.2
2025-07-14 08:36:00,956 - __main__ - WARNING - Failed to read frame
2025-07-14 08:36:00,956 - __main__ - INFO - Cleanup completed
2025-07-14 08:41:36,604 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:41:36,757 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:41:46,908 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 08:41:51,878 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 9
2025-07-14 08:42:06,837 - __main__ - INFO - KPI Update - Flow: 14.8 km/h, Congestion: 26.0%, Satisfaction: 64.0
2025-07-14 08:42:06,987 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 26
2025-07-14 08:42:20,523 - __main__ - WARNING - Failed to read frame
2025-07-14 08:42:20,523 - __main__ - INFO - Cleanup completed
2025-07-14 08:47:57,141 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 08:47:57,292 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 08:48:09,270 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 08:48:10,335 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 08:48:18,417 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 08:48:26,484 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 08:48:27,340 - __main__ - INFO - KPI Update - Flow: 12.1 km/h, Congestion: 32.0%, Satisfaction: 60.1
2025-07-14 08:48:34,618 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 08:48:42,705 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 08:48:43,036 - __main__ - WARNING - Failed to read frame
2025-07-14 08:48:43,036 - __main__ - INFO - Cleanup completed
2025-07-14 11:32:02,793 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 11:32:02,939 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 11:32:18,531 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 11:32:19,599 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 3
2025-07-14 11:32:27,622 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 11:32:32,951 - __main__ - INFO - KPI Update - Flow: 13.6 km/h, Congestion: 28.0%, Satisfaction: 62.4
2025-07-14 11:32:35,675 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 11:32:43,785 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 12
2025-07-14 11:32:51,800 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 11:32:52,701 - __main__ - WARNING - Failed to read frame
2025-07-14 11:32:52,701 - __main__ - INFO - Cleanup completed
2025-07-14 12:01:31,290 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:01:31,429 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:01:41,025 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:01:42,046 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:01:50,072 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 12:01:58,187 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 17
2025-07-14 12:02:01,523 - __main__ - INFO - KPI Update - Flow: 13.0 km/h, Congestion: 24.0%, Satisfaction: 63.2
2025-07-14 12:02:06,298 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 13
2025-07-14 12:02:14,388 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 12:02:16,155 - __main__ - WARNING - Failed to read frame
2025-07-14 12:02:16,155 - __main__ - INFO - Cleanup completed
2025-07-14 12:08:18,463 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:08:18,610 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:08:32,351 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:08:33,392 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:08:33,393 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:33,544 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:33,680 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:33,866 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,006 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,147 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,282 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,418 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,554 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,688 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,826 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:34,967 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,104 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,239 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,376 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,524 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,664 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,804 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:35,944 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,084 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,225 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,365 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,503 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,643 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,784 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:36,941 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,090 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,239 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,407 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,558 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,718 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:37,871 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,018 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,164 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,305 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,446 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,586 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,729 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:38,875 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,016 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,158 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,301 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,441 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,586 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,728 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:39,868 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,008 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,147 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,288 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,428 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,580 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,720 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,857 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:40,995 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,133 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,269 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,415 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:08:41,415 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,558 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,699 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,839 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:41,990 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,135 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,276 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,415 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,556 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,696 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,836 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:42,977 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,114 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,256 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,398 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,539 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,681 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,822 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:43,962 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,101 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,241 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,382 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,523 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,663 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,802 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:44,942 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,081 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,227 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,367 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,508 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,651 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,792 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:45,932 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,074 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,217 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,357 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,502 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,642 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,782 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:46,922 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,062 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,199 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,337 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,478 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,617 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,760 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:47,900 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,040 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,181 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,321 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,460 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,601 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,744 - __main__ - INFO - KPI Update - Flow: 13.6 km/h, Congestion: 24.0%, Satisfaction: 63.7
2025-07-14 12:08:48,744 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:48,889 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,030 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,171 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,312 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,455 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:08:49,455 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,602 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,742 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:49,883 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,028 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,172 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,312 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,454 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,598 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,738 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:50,880 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,024 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,165 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,307 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,449 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,591 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,731 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:51,871 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,013 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,155 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,296 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,438 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,578 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,718 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,858 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:52,997 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,137 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,279 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,419 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,561 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,701 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,842 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:53,981 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,122 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,263 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,405 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,546 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,688 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,826 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:54,966 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,106 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,244 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,384 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,525 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,667 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,806 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:55,947 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,088 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,230 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,371 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,511 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,650 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,789 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:56,931 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,073 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,211 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,359 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,501 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 12:08:57,502 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,643 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,784 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:57,922 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,065 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,210 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,350 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,491 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,633 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,773 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:58,913 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,053 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,203 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,351 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,500 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,667 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,815 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:08:59,964 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,113 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,265 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,412 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,561 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,707 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:00,856 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,003 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,153 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,305 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,456 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,605 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,756 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:01,904 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,048 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,196 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,338 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,482 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,626 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,771 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:02,914 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,060 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,206 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,349 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,494 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,637 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,779 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:03,924 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,069 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,216 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,361 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,525 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,678 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,825 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:04,980 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,139 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,287 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,435 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,594 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 12:09:05,594 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,745 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:05,908 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:06,070 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:06,259 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:06,409 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:06,556 - __main__ - ERROR - Visualization error: 'PerformanceMonitor' object has no attribute 'get_fps'
2025-07-14 12:09:06,592 - __main__ - WARNING - Failed to read frame
2025-07-14 12:09:06,593 - __main__ - INFO - Cleanup completed
2025-07-14 12:14:56,046 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:14:56,195 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:15:08,619 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:15:09,645 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:15:17,718 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 12:15:25,837 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 16
2025-07-14 12:15:26,274 - __main__ - INFO - KPI Update - Flow: 13.5 km/h, Congestion: 28.0%, Satisfaction: 62.4
2025-07-14 12:15:33,928 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 12:15:42,050 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:15:42,512 - __main__ - WARNING - Failed to read frame
2025-07-14 12:15:42,512 - __main__ - INFO - Cleanup completed
2025-07-14 12:29:27,859 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:29:28,006 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:29:38,834 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:29:39,885 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:29:47,941 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:29:56,047 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:29:58,041 - __main__ - INFO - KPI Update - Flow: 15.7 km/h, Congestion: 26.0%, Satisfaction: 64.8
2025-07-14 12:30:04,099 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 12:30:12,178 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:30:12,655 - __main__ - WARNING - Failed to read frame
2025-07-14 12:30:12,655 - __main__ - INFO - Cleanup completed
2025-07-14 12:33:40,770 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:33:40,944 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:33:51,265 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:33:52,228 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-14 12:34:00,248 - __main__ - INFO - ✅ Saved traffic + KPI data: Severe Congestion, Vehicles: 36
2025-07-14 12:34:08,324 - __main__ - INFO - ✅ Saved traffic + KPI data: High Traffic, Vehicles: 33
2025-07-14 12:34:10,995 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 22.0%, Satisfaction: 53.4
2025-07-14 12:34:15,569 - __main__ - WARNING - Failed to read frame
2025-07-14 12:34:15,569 - __main__ - INFO - Cleanup completed
2025-07-14 12:35:56,944 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:35:57,120 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:36:05,877 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:36:06,799 - __main__ - ERROR - Runtime error: 'IndustrialTrafficMonitor' object has no attribute 'total_counted_ids'
2025-07-14 12:36:06,800 - __main__ - INFO - Cleanup completed
2025-07-14 12:37:12,860 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:37:12,975 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:37:20,673 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:37:21,634 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:37:29,735 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:37:37,874 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:37:42,985 - __main__ - INFO - KPI Update - Flow: 11.4 km/h, Congestion: 28.0%, Satisfaction: 60.7
2025-07-14 12:37:45,975 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 12:37:53,993 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 13
2025-07-14 12:37:54,472 - __main__ - WARNING - Failed to read frame
2025-07-14 12:37:54,472 - __main__ - INFO - Cleanup completed
2025-07-14 12:48:01,273 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:48:01,416 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:48:34,154 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:48:35,196 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:48:35,197 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 28.0%, Satisfaction: 51.6
2025-07-14 12:48:43,195 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:48:51,320 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:48:59,411 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 12:49:05,251 - __main__ - INFO - KPI Update - Flow: 20.6 km/h, Congestion: 18.0%, Satisfaction: 71.1
2025-07-14 12:49:07,540 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 12:49:07,997 - __main__ - WARNING - Failed to read frame
2025-07-14 12:49:07,997 - __main__ - INFO - Cleanup completed
2025-07-14 12:49:28,192 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:49:28,319 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:49:39,128 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:49:40,127 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:49:48,167 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:49:56,246 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:49:58,341 - __main__ - INFO - KPI Update - Flow: 14.7 km/h, Congestion: 26.0%, Satisfaction: 63.9
2025-07-14 12:50:04,373 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 15
2025-07-14 12:50:12,378 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 12:50:12,554 - __main__ - WARNING - Failed to read frame
2025-07-14 12:50:12,554 - __main__ - INFO - Cleanup completed
2025-07-14 12:51:58,275 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 12:51:58,423 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 12:52:07,743 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 12:52:08,770 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 12:52:16,841 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 12:52:24,842 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 12:52:28,426 - __main__ - INFO - KPI Update - Flow: 13.3 km/h, Congestion: 26.0%, Satisfaction: 62.8
2025-07-14 12:52:32,877 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 13
2025-07-14 12:52:41,008 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 16
2025-07-14 12:52:42,464 - __main__ - WARNING - Failed to read frame
2025-07-14 12:52:42,464 - __main__ - INFO - Cleanup completed
2025-07-14 13:01:06,420 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 13:01:06,564 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 13:01:44,936 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 13:01:45,972 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 2
2025-07-14 13:01:45,973 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 28.0%, Satisfaction: 51.6
2025-07-14 13:01:53,987 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 10
2025-07-14 13:02:02,108 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 13
2025-07-14 13:02:10,241 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 9
2025-07-14 13:02:16,051 - __main__ - INFO - KPI Update - Flow: 14.0 km/h, Congestion: 22.0%, Satisfaction: 64.6
2025-07-14 13:02:18,309 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 12
2025-07-14 13:02:19,251 - __main__ - WARNING - Failed to read frame
2025-07-14 13:02:19,251 - __main__ - INFO - Cleanup completed
2025-07-14 21:49:41,299 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 21:49:41,536 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 21:49:52,193 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 21:49:53,301 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 21:50:01,420 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 21:50:09,497 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 18
2025-07-14 21:50:11,493 - __main__ - INFO - KPI Update - Flow: 15.8 km/h, Congestion: 26.0%, Satisfaction: 64.8
2025-07-14 21:50:17,501 - __main__ - INFO - ✅ Saved traffic + KPI data: Normal Traffic, Vehicles: 14
2025-07-14 21:50:25,553 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 14
2025-07-14 21:50:26,028 - __main__ - WARNING - Failed to read frame
2025-07-14 21:50:26,028 - __main__ - INFO - Cleanup completed
2025-07-14 21:53:09,612 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 21:53:09,809 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 21:53:34,809 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 21:53:35,748 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 4
2025-07-14 21:53:39,712 - __main__ - INFO - KPI Update - Flow: 13.4 km/h, Congestion: 24.0%, Satisfaction: 63.6
2025-07-14 21:53:43,781 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 9
2025-07-14 21:53:51,784 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 10
2025-07-14 21:53:59,850 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 9
2025-07-14 21:54:07,898 - __main__ - INFO - ✅ Saved traffic + KPI data: Low Traffic, Vehicles: 5
2025-07-14 21:54:08,378 - __main__ - WARNING - Failed to read frame
2025-07-14 21:54:08,378 - __main__ - INFO - Cleanup completed
2025-07-14 22:02:25,384 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 22:02:25,622 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 22:02:35,331 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 22:02:36,387 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:02:44,400 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:02:52,427 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:02:55,528 - __main__ - INFO - KPI Update - Flow: 14.8 km/h, Congestion: 30.0%, Satisfaction: 60.9
2025-07-14 22:03:00,577 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:03:08,616 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:03:09,506 - __main__ - WARNING - Failed to read frame
2025-07-14 22:03:09,507 - __main__ - INFO - Cleanup completed
2025-07-14 22:06:37,398 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 22:06:37,634 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 22:06:45,533 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-14 22:06:46,544 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:06:54,588 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:07:02,663 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:07:07,550 - __main__ - INFO - KPI Update - Flow: 12.8 km/h, Congestion: 24.0%, Satisfaction: 61.4
2025-07-14 22:07:10,677 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:07:18,798 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:07:20,965 - __main__ - WARNING - Failed to read frame
2025-07-14 22:07:20,969 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:07:20,969 - __main__ - INFO - Cleanup completed
2025-07-14 22:10:40,355 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 22:10:40,597 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 22:10:59,236 - __main__ - INFO - Starting traffic monitoring with ROI on source: 4.mp4
2025-07-14 22:11:00,193 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:08,206 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:10,488 - __main__ - INFO - KPI Update - Flow: 13.9 km/h, Congestion: 16.0%, Satisfaction: 64.5
2025-07-14 22:11:16,235 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:24,265 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:32,358 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:40,421 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:40,518 - __main__ - INFO - KPI Update - Flow: 7.3 km/h, Congestion: 16.0%, Satisfaction: 60.1
2025-07-14 22:11:48,477 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:11:56,555 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:04,636 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:10,556 - __main__ - INFO - KPI Update - Flow: 10.7 km/h, Congestion: 14.0%, Satisfaction: 62.9
2025-07-14 22:12:12,658 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:20,679 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:28,766 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:36,860 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:40,654 - __main__ - INFO - KPI Update - Flow: 11.4 km/h, Congestion: 14.0%, Satisfaction: 63.4
2025-07-14 22:12:44,867 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:12:52,934 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:13:00,988 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:13:09,033 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:13:10,733 - __main__ - INFO - KPI Update - Flow: 9.8 km/h, Congestion: 10.0%, Satisfaction: 63.6
2025-07-14 22:13:17,086 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:13:25,095 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:13:40,748 - __main__ - INFO - KPI Update - Flow: 3.7 km/h, Congestion: 10.0%, Satisfaction: 59.5
2025-07-14 22:13:41,255 - __main__ - WARNING - Failed to read frame
2025-07-14 22:13:41,255 - __main__ - INFO - Cleanup completed
2025-07-14 22:14:13,938 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-14 22:14:14,134 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-14 22:14:30,740 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_cars-are-driving-down-a-street-with-construction-workers_26515781.mp4
2025-07-14 22:14:31,766 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:14:39,789 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:14:44,040 - __main__ - INFO - KPI Update - Flow: 7.1 km/h, Congestion: 16.0%, Satisfaction: 59.9
2025-07-14 22:14:47,805 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:14:51,544 - __main__ - WARNING - Failed to read frame
2025-07-14 22:14:51,546 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250714.csv
2025-07-14 22:14:51,547 - __main__ - INFO - Cleanup completed
2025-07-15 06:37:52,395 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 06:37:52,737 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 06:38:03,275 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 06:38:04,775 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:13,061 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:21,245 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:22,795 - __main__ - INFO - KPI Update - Flow: 4.1 km/h, Congestion: 30.0%, Satisfaction: 53.8
2025-07-15 06:38:29,603 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:37,925 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:46,062 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:38:52,852 - __main__ - INFO - KPI Update - Flow: 5.1 km/h, Congestion: 40.0%, Satisfaction: 50.4
2025-07-15 06:38:54,370 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:02,655 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:10,971 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:19,121 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:22,906 - __main__ - INFO - KPI Update - Flow: 4.0 km/h, Congestion: 36.0%, Satisfaction: 51.2
2025-07-15 06:39:27,438 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:31,750 - __main__ - WARNING - Failed to read frame
2025-07-15 06:39:31,753 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 06:39:31,753 - __main__ - INFO - Cleanup completed
2025-07-15 06:43:11,205 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 06:43:12,254 - deep_sort_realtime.embedder.embedder_pytorch - INFO - MobileNetV2 Embedder for Deep Sort initialised
2025-07-15 06:43:12,254 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - gpu enabled: False
2025-07-15 06:43:12,254 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - half precision: False
2025-07-15 06:43:12,254 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - max batch size: 16
2025-07-15 06:43:12,254 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - expects BGR: True
2025-07-15 06:43:12,326 - deep_sort_realtime.deepsort_tracker - INFO - DeepSort Tracker initialised
2025-07-15 06:43:12,326 - deep_sort_realtime.deepsort_tracker - INFO - - max age: 30
2025-07-15 06:43:12,326 - deep_sort_realtime.deepsort_tracker - INFO - - appearance threshold: 0.4
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - nms threshold: OFF
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - max num of appearance features: None
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - overriding track class : No
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - today given : No
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - in-build embedder : Yes
2025-07-15 06:43:12,327 - deep_sort_realtime.deepsort_tracker - INFO - - polygon detections : No
2025-07-15 06:43:51,270 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 06:43:52,263 - deep_sort_realtime.embedder.embedder_pytorch - INFO - MobileNetV2 Embedder for Deep Sort initialised
2025-07-15 06:43:52,263 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - gpu enabled: False
2025-07-15 06:43:52,263 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - half precision: False
2025-07-15 06:43:52,263 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - max batch size: 16
2025-07-15 06:43:52,263 - deep_sort_realtime.embedder.embedder_pytorch - INFO - - expects BGR: True
2025-07-15 06:43:52,333 - deep_sort_realtime.deepsort_tracker - INFO - DeepSort Tracker initialised
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - max age: 30
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - appearance threshold: 0.4
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - nms threshold: OFF
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - max num of appearance features: None
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - overriding track class : No
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - today given : No
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - in-build embedder : Yes
2025-07-15 06:43:52,334 - deep_sort_realtime.deepsort_tracker - INFO - - polygon detections : No
2025-07-15 06:56:15,327 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 06:56:54,180 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 06:57:36,244 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:11:20,405 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:11:20,521 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:11:30,015 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:11:30,234 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:11:37,899 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 07:11:39,445 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:11:47,814 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:11:55,900 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:00,272 - __main__ - INFO - KPI Update - Flow: 4.5 km/h, Congestion: 24.0%, Satisfaction: 55.8
2025-07-15 07:12:03,899 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:12,003 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:20,392 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:28,557 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:30,524 - __main__ - INFO - KPI Update - Flow: 4.9 km/h, Congestion: 40.0%, Satisfaction: 50.1
2025-07-15 07:12:36,558 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:44,596 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:12:52,600 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:13:00,650 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:13:00,651 - __main__ - INFO - KPI Update - Flow: 3.7 km/h, Congestion: 38.0%, Satisfaction: 51.1
2025-07-15 07:13:08,874 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:13:12,210 - __main__ - WARNING - Failed to read frame
2025-07-15 07:13:12,213 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:13:12,213 - __main__ - INFO - Cleanup completed
2025-07-15 07:15:19,149 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:15:19,400 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:15:27,367 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 07:15:28,890 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:15:37,241 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:15:45,569 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:15:49,774 - __main__ - INFO - KPI Update - Flow: 3.8 km/h, Congestion: 30.0%, Satisfaction: 53.5
2025-07-15 07:15:53,798 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:01,961 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:10,129 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:18,188 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:19,853 - __main__ - INFO - KPI Update - Flow: 4.8 km/h, Congestion: 40.0%, Satisfaction: 48.9
2025-07-15 07:16:26,518 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:34,577 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:42,882 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:49,874 - __main__ - INFO - KPI Update - Flow: 4.9 km/h, Congestion: 36.0%, Satisfaction: 50.9
2025-07-15 07:16:51,041 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:16:59,347 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:17:00,565 - __main__ - WARNING - Failed to read frame
2025-07-15 07:17:00,567 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:17:00,567 - __main__ - INFO - Cleanup completed
2025-07-15 07:19:10,470 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:19:10,737 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:19:18,590 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 07:19:20,112 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:19:28,145 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:19:36,224 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:19:39,000 - __main__ - INFO - Monitoring stopped by user
2025-07-15 07:19:39,004 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:19:39,004 - __main__ - INFO - Cleanup completed
2025-07-15 07:21:54,226 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:21:54,475 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:22:05,695 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 07:22:07,232 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:15,585 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:23,756 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:24,619 - __main__ - INFO - KPI Update - Flow: 4.4 km/h, Congestion: 36.0%, Satisfaction: 52.1
2025-07-15 07:22:31,813 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:39,877 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:48,190 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:22:54,659 - __main__ - INFO - KPI Update - Flow: 4.5 km/h, Congestion: 32.0%, Satisfaction: 51.3
2025-07-15 07:22:56,290 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:04,663 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:12,998 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:21,117 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:24,959 - __main__ - INFO - KPI Update - Flow: 4.0 km/h, Congestion: 38.0%, Satisfaction: 47.4
2025-07-15 07:23:29,380 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:37,492 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:40,657 - __main__ - WARNING - Failed to read frame
2025-07-15 07:23:40,660 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:23:40,660 - __main__ - INFO - Cleanup completed
2025-07-15 07:29:36,029 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 07:29:36,278 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 07:29:44,015 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 07:29:45,520 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:29:53,697 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:01,719 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:06,464 - __main__ - INFO - KPI Update - Flow: 4.6 km/h, Congestion: 24.0%, Satisfaction: 55.9
2025-07-15 07:30:10,050 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:18,236 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:26,585 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:34,686 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:36,623 - __main__ - INFO - KPI Update - Flow: 5.6 km/h, Congestion: 34.0%, Satisfaction: 52.5
2025-07-15 07:30:43,037 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:51,213 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:30:59,239 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:31:06,877 - __main__ - INFO - KPI Update - Flow: 3.3 km/h, Congestion: 38.0%, Satisfaction: 48.2
2025-07-15 07:31:07,283 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:31:15,492 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:31:18,807 - __main__ - WARNING - Failed to read frame
2025-07-15 07:31:18,809 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 07:31:18,809 - __main__ - INFO - Cleanup completed
2025-07-15 08:27:12,265 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:27:12,524 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:27:19,570 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:27:21,111 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:27:29,118 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:27:37,340 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:27:42,527 - __main__ - INFO - KPI Update - Flow: 4.0 km/h, Congestion: 26.0%, Satisfaction: 54.9
2025-07-15 08:27:45,683 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:27:53,942 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:02,018 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:10,075 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:12,901 - __main__ - INFO - KPI Update - Flow: 3.7 km/h, Congestion: 40.0%, Satisfaction: 49.3
2025-07-15 08:28:18,408 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:26,756 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:35,081 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:42,904 - __main__ - INFO - KPI Update - Flow: 3.2 km/h, Congestion: 40.0%, Satisfaction: 46.3
2025-07-15 08:28:43,327 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:51,610 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:53,334 - __main__ - WARNING - Failed to read frame
2025-07-15 08:28:53,338 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:28:53,338 - __main__ - INFO - Cleanup completed
2025-07-15 08:29:38,183 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:29:38,428 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:29:48,768 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:29:50,225 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:29:58,536 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:06,756 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:08,728 - __main__ - INFO - KPI Update - Flow: 4.1 km/h, Congestion: 32.0%, Satisfaction: 53.1
2025-07-15 08:30:14,919 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:23,230 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:31,577 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:38,964 - __main__ - INFO - KPI Update - Flow: 4.6 km/h, Congestion: 34.0%, Satisfaction: 50.7
2025-07-15 08:30:39,737 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:47,892 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:30:56,106 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:31:04,196 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:31:09,213 - __main__ - INFO - KPI Update - Flow: 3.7 km/h, Congestion: 38.0%, Satisfaction: 48.7
2025-07-15 08:31:12,323 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:31:20,348 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:31:20,772 - __main__ - WARNING - Failed to read frame
2025-07-15 08:31:20,775 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:31:20,775 - __main__ - INFO - Cleanup completed
2025-07-15 08:38:35,025 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:38:35,276 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:38:43,656 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:38:45,188 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:38:53,410 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:01,513 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:05,629 - __main__ - INFO - KPI Update - Flow: 5.6 km/h, Congestion: 28.0%, Satisfaction: 55.3
2025-07-15 08:39:09,525 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:17,588 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:25,720 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:34,067 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:35,972 - __main__ - INFO - KPI Update - Flow: 4.0 km/h, Congestion: 40.0%, Satisfaction: 49.8
2025-07-15 08:39:42,122 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:50,260 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:39:58,573 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:40:05,979 - __main__ - INFO - KPI Update - Flow: 3.8 km/h, Congestion: 40.0%, Satisfaction: 48.1
2025-07-15 08:40:06,826 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:40:14,873 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:40:16,882 - __main__ - WARNING - Failed to read frame
2025-07-15 08:40:16,885 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:40:16,885 - __main__ - INFO - Cleanup completed
2025-07-15 08:40:35,610 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:40:35,833 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:40:43,477 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:40:45,025 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:40:53,155 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:01,591 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:06,215 - __main__ - INFO - KPI Update - Flow: 5.2 km/h, Congestion: 28.0%, Satisfaction: 55.0
2025-07-15 08:41:09,687 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:17,763 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:25,917 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:34,304 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:36,354 - __main__ - INFO - KPI Update - Flow: 4.4 km/h, Congestion: 32.0%, Satisfaction: 52.5
2025-07-15 08:41:42,343 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:50,415 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:41:58,523 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:42:06,830 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:42:06,832 - __main__ - INFO - KPI Update - Flow: 3.4 km/h, Congestion: 36.0%, Satisfaction: 49.2
2025-07-15 08:42:15,112 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:42:23,508 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:42:27,195 - __main__ - WARNING - Failed to read frame
2025-07-15 08:42:27,198 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:42:27,198 - __main__ - INFO - Cleanup completed
2025-07-15 08:43:02,324 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:43:02,550 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:43:11,971 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:43:13,460 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:43:21,646 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:43:29,851 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:43:32,605 - __main__ - INFO - KPI Update - Flow: 4.1 km/h, Congestion: 36.0%, Satisfaction: 52.0
2025-07-15 08:43:38,229 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:43:46,432 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:43:54,522 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:02,747 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:02,747 - __main__ - INFO - KPI Update - Flow: 3.5 km/h, Congestion: 38.0%, Satisfaction: 48.7
2025-07-15 08:44:11,366 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:19,709 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:27,817 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:33,089 - __main__ - INFO - KPI Update - Flow: 3.3 km/h, Congestion: 36.0%, Satisfaction: 51.4
2025-07-15 08:44:35,974 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:44,441 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:52,785 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:55,569 - __main__ - WARNING - Failed to read frame
2025-07-15 08:44:55,572 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:44:55,572 - __main__ - INFO - Cleanup completed
2025-07-15 08:45:35,634 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:45:35,716 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:45:52,229 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:45:53,197 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:46:01,207 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:46:05,824 - __main__ - INFO - KPI Update - Flow: 26.2 km/h, Congestion: 2.0%, Satisfaction: 76.9
2025-07-15 08:46:09,259 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:46:17,346 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:46:23,527 - __main__ - WARNING - Failed to read frame
2025-07-15 08:46:23,532 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:46:23,532 - __main__ - INFO - Cleanup completed
2025-07-15 08:47:18,474 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:47:18,568 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:47:26,988 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:47:28,047 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:47:36,124 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:47:44,307 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:47:48,639 - __main__ - INFO - KPI Update - Flow: 12.5 km/h, Congestion: 24.0%, Satisfaction: 61.1
2025-07-15 08:47:52,481 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:48:00,526 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:48:06,011 - __main__ - WARNING - Failed to read frame
2025-07-15 08:48:06,015 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:48:06,015 - __main__ - INFO - Cleanup completed
2025-07-15 08:48:34,945 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:48:35,036 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:48:46,220 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:48:47,261 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:48:55,391 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:49:03,443 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:49:05,081 - __main__ - INFO - KPI Update - Flow: 10.6 km/h, Congestion: 26.0%, Satisfaction: 59.3
2025-07-15 08:49:11,502 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:49:19,519 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:49:21,989 - __main__ - WARNING - Failed to read frame
2025-07-15 08:49:21,992 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:49:21,992 - __main__ - INFO - Cleanup completed
2025-07-15 08:49:45,056 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 08:49:45,147 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 08:49:52,798 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 08:49:53,793 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:01,917 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:10,062 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:15,222 - __main__ - INFO - KPI Update - Flow: 10.5 km/h, Congestion: 20.0%, Satisfaction: 61.0
2025-07-15 08:50:18,185 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:26,250 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:33,207 - __main__ - WARNING - Failed to read frame
2025-07-15 08:50:33,210 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 08:50:33,210 - __main__ - INFO - Cleanup completed
2025-07-15 09:34:51,980 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 09:35:01,251 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 09:35:11,376 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 09:35:12,590 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:35:20,659 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:35:28,793 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:35:31,293 - __main__ - INFO - KPI Update - Flow: 6.3 km/h, Congestion: 30.0%, Satisfaction: 54.3
2025-07-15 09:35:37,049 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:35:45,277 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:35:53,280 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:36:01,342 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:36:01,343 - __main__ - INFO - KPI Update - Flow: 5.8 km/h, Congestion: 28.0%, Satisfaction: 53.5
2025-07-15 09:36:09,504 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:36:10,485 - __main__ - WARNING - Failed to read frame
2025-07-15 09:36:10,489 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:36:10,489 - __main__ - INFO - Cleanup completed
2025-07-15 09:38:17,190 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 09:38:17,342 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 09:38:24,975 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 09:38:26,206 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:38:34,348 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:38:42,550 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:38:47,376 - __main__ - INFO - KPI Update - Flow: 7.9 km/h, Congestion: 36.0%, Satisfaction: 54.4
2025-07-15 09:38:50,641 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:38:58,820 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:39:07,026 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:39:15,176 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:39:17,486 - __main__ - INFO - KPI Update - Flow: 6.2 km/h, Congestion: 28.0%, Satisfaction: 54.9
2025-07-15 09:39:18,450 - __main__ - WARNING - Failed to read frame
2025-07-15 09:39:18,453 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:39:18,453 - __main__ - INFO - Cleanup completed
2025-07-15 09:41:25,255 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 09:41:25,397 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 09:41:35,431 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 09:41:36,701 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:41:44,711 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:41:52,870 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:41:55,454 - __main__ - INFO - KPI Update - Flow: 8.8 km/h, Congestion: 28.0%, Satisfaction: 55.9
2025-07-15 09:42:01,053 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:42:09,108 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:42:17,252 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:42:25,391 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:42:25,617 - __main__ - INFO - KPI Update - Flow: 8.1 km/h, Congestion: 34.0%, Satisfaction: 55.2
2025-07-15 09:42:29,946 - __main__ - WARNING - Failed to read frame
2025-07-15 09:42:29,949 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 09:42:29,949 - __main__ - INFO - Cleanup completed
2025-07-15 11:13:45,960 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 11:13:46,110 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 11:14:08,808 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 11:14:10,043 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:14:16,219 - __main__ - INFO - KPI Update - Flow: 6.8 km/h, Congestion: 30.0%, Satisfaction: 53.9
2025-07-15 11:14:18,185 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:14:26,265 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:14:34,392 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:14:41,408 - __main__ - INFO - Monitoring stopped by user
2025-07-15 11:14:41,413 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:14:41,413 - __main__ - INFO - Cleanup completed
2025-07-15 11:14:58,089 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 11:14:58,211 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 11:15:08,009 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 11:15:09,176 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:17,339 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:25,572 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:28,261 - __main__ - INFO - KPI Update - Flow: 6.4 km/h, Congestion: 28.0%, Satisfaction: 55.8
2025-07-15 11:15:33,708 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:41,752 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:49,950 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:57,955 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:15:58,481 - __main__ - INFO - KPI Update - Flow: 5.5 km/h, Congestion: 32.0%, Satisfaction: 54.0
2025-07-15 11:16:06,072 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:16:06,869 - __main__ - WARNING - Failed to read frame
2025-07-15 11:16:06,873 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 11:16:06,873 - __main__ - INFO - Cleanup completed
2025-07-15 12:45:41,342 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-15 12:45:41,486 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-15 12:45:55,254 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-15 12:45:56,520 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:04,730 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:11,624 - __main__ - INFO - KPI Update - Flow: 3.8 km/h, Congestion: 34.0%, Satisfaction: 52.3
2025-07-15 12:46:12,820 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:21,027 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:29,047 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:37,196 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:41,669 - __main__ - INFO - KPI Update - Flow: 8.5 km/h, Congestion: 32.0%, Satisfaction: 56.1
2025-07-15 12:46:45,247 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:50,981 - __main__ - WARNING - Failed to read frame
2025-07-15 12:46:50,985 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250715.csv
2025-07-15 12:46:50,985 - __main__ - INFO - Cleanup completed
2025-07-16 10:33:29,325 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-16 10:33:29,471 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-16 10:33:40,470 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-16 10:33:41,759 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:33:49,823 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:33:57,967 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:33:59,583 - __main__ - INFO - KPI Update - Flow: 5.9 km/h, Congestion: 30.0%, Satisfaction: 51.6
2025-07-16 10:34:06,011 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:34:14,018 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:34:22,280 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:34:29,623 - __main__ - INFO - KPI Update - Flow: 5.3 km/h, Congestion: 34.0%, Satisfaction: 49.6
2025-07-16 10:34:30,319 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:34:37,421 - __main__ - WARNING - Failed to read frame
2025-07-16 10:34:37,424 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 10:34:37,424 - __main__ - INFO - Cleanup completed
2025-07-16 11:45:16,524 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-16 11:45:16,672 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-16 11:45:33,098 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-16 11:45:34,326 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:45:42,387 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:45:46,882 - __main__ - INFO - KPI Update - Flow: 6.8 km/h, Congestion: 20.0%, Satisfaction: 58.6
2025-07-16 11:45:50,510 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:45:58,521 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:46:06,725 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:46:14,211 - __main__ - INFO - Monitoring stopped by user
2025-07-16 11:46:14,215 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:46:14,215 - __main__ - INFO - Cleanup completed
2025-07-16 11:46:19,291 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-16 11:46:19,419 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-16 11:46:49,657 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-16 11:46:50,872 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:46:50,873 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 36.0%, Satisfaction: 49.2
2025-07-16 11:46:58,874 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:07,069 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:15,114 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:21,119 - __main__ - INFO - KPI Update - Flow: 5.3 km/h, Congestion: 36.0%, Satisfaction: 52.7
2025-07-16 11:47:23,378 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:31,531 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:39,576 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:45,560 - __main__ - WARNING - Failed to read frame
2025-07-16 11:47:45,564 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250716.csv
2025-07-16 11:47:45,565 - __main__ - INFO - Cleanup completed
2025-07-17 11:59:02,760 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-17 11:59:03,000 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-17 12:00:17,274 - __main__ - INFO - Starting traffic monitoring with ROI on source: vecteezy_ho-chi-minh-city-traffic-at-intersection-vietnam_1793410.mov
2025-07-17 12:00:18,942 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:00:18,942 - __main__ - INFO - KPI Update - Flow: 0.0 km/h, Congestion: 36.0%, Satisfaction: 49.2
2025-07-17 12:00:27,131 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:00:35,270 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:00:43,331 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:00:49,070 - __main__ - INFO - KPI Update - Flow: 7.3 km/h, Congestion: 34.0%, Satisfaction: 53.0
2025-07-17 12:00:51,353 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:00:59,409 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:01:07,640 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:01:15,847 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:01:17,163 - __main__ - WARNING - Failed to read frame
2025-07-17 12:01:17,166 - __main__ - INFO - ✅ Exported traffic + KPI data to CSV: traffic_data_20250717.csv
2025-07-17 12:01:17,166 - __main__ - INFO - Cleanup completed
2025-07-17 12:03:45,141 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-17 12:03:45,305 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
2025-07-17 12:04:26,544 - __main__ - WARNING - Config file config.yaml not found. Using defaults.
2025-07-17 12:04:26,681 - __main__ - INFO - Industrial Traffic Monitor with KPIs initialized successfully
